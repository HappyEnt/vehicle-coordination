cmake_minimum_required(VERSION 3.0)

# Setup the project.
# Its name is defined to be the controller directory name.
get_filename_component(CURRENT_LIBRARY_DIR ${CMAKE_CURRENT_SOURCE_DIR} NAME)

# set path where protobuf searches for interface files
# set(Protobuf_IMPORT_DIRS "../../../components/picar-wheels/proto")
set(PROTO_FILES "${CMAKE_SOURCE_DIR}/../picar-wheels/proto/picar.proto")
# copy protofile to current directory
file(COPY ${PROTO_FILES} DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})

get_filename_component(PROTO_NAMES ${PROTO_FILES} NAME)

# generate library
add_library( ${CURRENT_LIBRARY_DIR} ${CURRENT_LIBRARY_DIR}.cpp ${PROTO_NAMES} )
target_link_libraries(${CURRENT_LIBRARY_DIR}
    PUBLIC
        protobuf::libprotobuf
        gRPC::grpc
        gRPC::grpc++
        gRPC::grpc++_reflection
        ${Boost_LIBRARIES}
      )

target_include_directories(${CURRENT_LIBRARY_DIR} PUBLIC ${CMAKE_CURRENT_BINARY_DIR})

get_target_property(grpc_cpp_plugin_location gRPC::grpc_cpp_plugin LOCATION)
protobuf_generate(TARGET ${CURRENT_LIBRARY_DIR} LANGUAGE cpp)
protobuf_generate(TARGET ${CURRENT_LIBRARY_DIR} LANGUAGE grpc GENERATE_EXTENSIONS .grpc.pb.h .grpc.pb.cc PLUGIN "protoc-gen-grpc=${grpc_cpp_plugin_location}")
